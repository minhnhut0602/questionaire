/*
 * generated by Xtext
 */
package dk.itu.smdp.group2.generator

import java.io.File
import org.eclipse.core.resources.ResourcesPlugin
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import questionairemodel.Questionaire
import questionairemodel.Question
import questionairemodel.Option
import questionairemodel.Paragraph
import questionairemodel.Heading
import questionairemodel.ChoiceQuestion
import questionairemodel.Element

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class QuestionaireGenerator implements IGenerator {

	String latex_cmd = "/usr/local/texlive/2012/bin/universal-darwin/pdflatex" //How to do this??

	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		resource.allContents.toIterable.filter(typeof(Questionaire)).forEach [ Questionaire it |
			val fname = it.name.toFirstUpper
			
			elements.forEach[removeQuotes]
			
			// generate Android implementation
			fsa.generateFile("android/" + fname + ".java", AndroidGenerator.compileToAndroid(it))
			//TODO: other Android stuff?
			
			
			// generate Latex
			fsa.generateFile("latex/" + fname +".tex", LatexGenerator.compileToLatex(it))
			//TODO: other Latex stuff?
			val projectName = resource.URI.segment(1)
			val project = ResourcesPlugin.workspace.root.getProject(projectName)
			var path = new File(project.location + "/src-gen/latex/")
			var cmd = #[latex_cmd, fname + ".tex"]
			Runtime.runtime.exec(cmd, null, path)
		]
	}
	
	def static removeQuotes(Element it){
		if(it instanceof Heading){
			text = text.replaceAll("^\"(.*)\"$", "$1")
		}
		if(it instanceof Paragraph){
			text = text.replaceAll("^\"(.*)\"$", "$1")
		}
		if(it instanceof Question){
			questionBase.title = questionBase.title.replaceAll("^\"(.*)\"$", "$1")
			if(questionBase.description != null) questionBase.description = questionBase.description.replaceAll("^\"(.*)\"$", "$1")
			if(it instanceof ChoiceQuestion) options.forEach[removeQuotes]
		}
		
	}
	
	def static removeQuotes(Option it){
		if(name!=null) name = name.replaceAll("^\"(.*)\"$", "$1")
		text = text.replaceAll("^\"(.*)\"$", "$1")
	}
}


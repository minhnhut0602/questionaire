/*
* generated by Xtext
*/
grammar InternalQuestionaire;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.itu.smdp.group2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.itu.smdp.group2.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.itu.smdp.group2.services.QuestionaireGrammarAccess;

}

@parser::members {

 	private QuestionaireGrammarAccess grammarAccess;
 	
    public InternalQuestionaireParser(TokenStream input, QuestionaireGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Questionaire";	
   	}
   	
   	@Override
   	protected QuestionaireGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleQuestionaire
entryRuleQuestionaire returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionaireRule()); }
	 iv_ruleQuestionaire=ruleQuestionaire 
	 { $current=$iv_ruleQuestionaire.current; } 
	 EOF 
;

// Rule Questionaire
ruleQuestionaire returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Questionaire' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuestionaireAccess().getQuestionaireKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionaireAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionaireRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQuestionaireAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='resultEmail' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQuestionaireAccess().getResultEmailKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionaireAccess().getResultEmailEStringParserRuleCall_4_0()); 
	    }
		lv_resultEmail_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionaireRule());
	        }
       		set(
       			$current, 
       			"resultEmail",
        		lv_resultEmail_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='elements' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQuestionaireAccess().getElementsKeyword_5_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQuestionaireAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionaireAccess().getElementsElementParserRuleCall_5_2_0()); 
	    }
		lv_elements_7_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionaireRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQuestionaireAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuestionaireAccess().getElementsElementParserRuleCall_5_3_1_0()); 
	    }
		lv_elements_9_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuestionaireRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_9_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getQuestionaireAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getQuestionaireAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementAccess().getHeadingParserRuleCall_0()); 
    }
    this_Heading_0=ruleHeading
    { 
        $current = $this_Heading_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getParagraphParserRuleCall_1()); 
    }
    this_Paragraph_1=ruleParagraph
    { 
        $current = $this_Paragraph_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTextQuestionParserRuleCall_2()); 
    }
    this_TextQuestion_2=ruleTextQuestion
    { 
        $current = $this_TextQuestion_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getChoiceQuestionParserRuleCall_3()); 
    }
    this_ChoiceQuestion_3=ruleChoiceQuestion
    { 
        $current = $this_ChoiceQuestion_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getMatrixQuestionParserRuleCall_4()); 
    }
    this_MatrixQuestion_4=ruleMatrixQuestion
    { 
        $current = $this_MatrixQuestion_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getCalendarQuestionParserRuleCall_5()); 
    }
    this_CalendarQuestion_5=ruleCalendarQuestion
    { 
        $current = $this_CalendarQuestion_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getIntegerQuestionParserRuleCall_6()); 
    }
    this_IntegerQuestion_6=ruleIntegerQuestion
    { 
        $current = $this_IntegerQuestion_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleHeading
entryRuleHeading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeadingRule()); }
	 iv_ruleHeading=ruleHeading 
	 { $current=$iv_ruleHeading.current; } 
	 EOF 
;

// Rule Heading
ruleHeading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Heading' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeadingAccess().getHeadingKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHeadingAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='text' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeadingAccess().getTextKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeadingAccess().getTextEStringParserRuleCall_3_0()); 
	    }
		lv_text_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeadingRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHeadingAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	 iv_ruleParagraph=ruleParagraph 
	 { $current=$iv_ruleParagraph.current; } 
	 EOF 
;

// Rule Paragraph
ruleParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Paragraph' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParagraphAccess().getParagraphKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParagraphAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='text' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParagraphAccess().getTextKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParagraphAccess().getTextEStringParserRuleCall_3_0()); 
	    }
		lv_text_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParagraphRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParagraphAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTextQuestion
entryRuleTextQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextQuestionRule()); }
	 iv_ruleTextQuestion=ruleTextQuestion 
	 { $current=$iv_ruleTextQuestion.current; } 
	 EOF 
;

// Rule TextQuestion
ruleTextQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mandatory_0_0=	'mandatory' 
    {
        newLeafNode(lv_mandatory_0_0, grammarAccess.getTextQuestionAccess().getMandatoryMandatoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "mandatory");
	    }

)
)(
(
		lv_multiline_1_0=	'multiline' 
    {
        newLeafNode(lv_multiline_1_0, grammarAccess.getTextQuestionAccess().getMultilineMultilineKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextQuestionRule());
	        }
       		setWithLastConsumed($current, "multiline", true, "multiline");
	    }

)
)	otherlv_2='TextQuestion' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextQuestionAccess().getTextQuestionKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextQuestionAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='id' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTextQuestionAccess().getIdKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextQuestionAccess().getIdEStringParserRuleCall_5_0()); 
	    }
		lv_id_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='title' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTextQuestionAccess().getTitleKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextQuestionAccess().getTitleEStringParserRuleCall_7_0()); 
	    }
		lv_title_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTextQuestionAccess().getDescriptionKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextQuestionAccess().getDescriptionEStringParserRuleCall_8_1_0()); 
	    }
		lv_description_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextQuestionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='conditions' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTextQuestionAccess().getConditionsKeyword_9_0());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTextQuestionAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTextQuestionAccess().getConditionsQuestionConditionCrossReference_9_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTextQuestionAccess().getCommaKeyword_9_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTextQuestionAccess().getConditionsQuestionConditionCrossReference_9_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTextQuestionAccess().getRightParenthesisKeyword_9_4());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTextQuestionAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleChoiceQuestion
entryRuleChoiceQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoiceQuestionRule()); }
	 iv_ruleChoiceQuestion=ruleChoiceQuestion 
	 { $current=$iv_ruleChoiceQuestion.current; } 
	 EOF 
;

// Rule ChoiceQuestion
ruleChoiceQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mandatory_0_0=	'mandatory' 
    {
        newLeafNode(lv_mandatory_0_0, grammarAccess.getChoiceQuestionAccess().getMandatoryMandatoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoiceQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "mandatory");
	    }

)
)	otherlv_1='ChoiceQuestion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChoiceQuestionAccess().getChoiceQuestionKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChoiceQuestionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='id' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChoiceQuestionAccess().getIdKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getIdEStringParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getChoiceQuestionAccess().getTitleKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getTitleEStringParserRuleCall_6_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getChoiceQuestionAccess().getDescriptionKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getDescriptionEStringParserRuleCall_7_1_0()); 
	    }
		lv_description_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='minSelections' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getChoiceQuestionAccess().getMinSelectionsKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getMinSelectionsEIntParserRuleCall_8_1_0()); 
	    }
		lv_minSelections_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		set(
       			$current, 
       			"minSelections",
        		lv_minSelections_10_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='maxSelections' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getChoiceQuestionAccess().getMaxSelectionsKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getMaxSelectionsEIntParserRuleCall_9_1_0()); 
	    }
		lv_maxSelections_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		set(
       			$current, 
       			"maxSelections",
        		lv_maxSelections_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='conditions' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getChoiceQuestionAccess().getConditionsKeyword_10_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getChoiceQuestionAccess().getLeftParenthesisKeyword_10_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoiceQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getConditionsQuestionConditionCrossReference_10_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getChoiceQuestionAccess().getCommaKeyword_10_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoiceQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getConditionsQuestionConditionCrossReference_10_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getChoiceQuestionAccess().getRightParenthesisKeyword_10_4());
    }
)?	otherlv_19='options' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getChoiceQuestionAccess().getOptionsKeyword_11());
    }
	otherlv_20='{' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getChoiceQuestionAccess().getLeftCurlyBracketKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getOptionsOptionParserRuleCall_13_0()); 
	    }
		lv_options_21_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_21_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getChoiceQuestionAccess().getCommaKeyword_14_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChoiceQuestionAccess().getOptionsOptionParserRuleCall_14_1_0()); 
	    }
		lv_options_23_0=ruleOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoiceQuestionRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_23_0, 
        		"Option");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_24='}' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getChoiceQuestionAccess().getRightCurlyBracketKeyword_15());
    }
	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getChoiceQuestionAccess().getRightCurlyBracketKeyword_16());
    }
)
;





// Entry rule entryRuleMatrixQuestion
entryRuleMatrixQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatrixQuestionRule()); }
	 iv_ruleMatrixQuestion=ruleMatrixQuestion 
	 { $current=$iv_ruleMatrixQuestion.current; } 
	 EOF 
;

// Rule MatrixQuestion
ruleMatrixQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mandatory_0_0=	'mandatory' 
    {
        newLeafNode(lv_mandatory_0_0, grammarAccess.getMatrixQuestionAccess().getMandatoryMandatoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatrixQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "mandatory");
	    }

)
)	otherlv_1='MatrixQuestion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatrixQuestionAccess().getMatrixQuestionKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatrixQuestionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='id' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMatrixQuestionAccess().getIdKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getIdEStringParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatrixQuestionAccess().getTitleKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getTitleEStringParserRuleCall_6_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMatrixQuestionAccess().getDescriptionKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getDescriptionEStringParserRuleCall_7_1_0()); 
	    }
		lv_description_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='columnNames' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMatrixQuestionAccess().getColumnNamesKeyword_8_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMatrixQuestionAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getColumnNamesEStringParserRuleCall_8_2_0()); 
	    }
		lv_columnNames_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		add(
       			$current, 
       			"columnNames",
        		lv_columnNames_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMatrixQuestionAccess().getCommaKeyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getColumnNamesEStringParserRuleCall_8_3_1_0()); 
	    }
		lv_columnNames_13_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		add(
       			$current, 
       			"columnNames",
        		lv_columnNames_13_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMatrixQuestionAccess().getRightCurlyBracketKeyword_8_4());
    }
)?(	otherlv_15='rowNames' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMatrixQuestionAccess().getRowNamesKeyword_9_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMatrixQuestionAccess().getLeftCurlyBracketKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getRowNamesEStringParserRuleCall_9_2_0()); 
	    }
		lv_rowNames_17_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		add(
       			$current, 
       			"rowNames",
        		lv_rowNames_17_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMatrixQuestionAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getRowNamesEStringParserRuleCall_9_3_1_0()); 
	    }
		lv_rowNames_19_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		add(
       			$current, 
       			"rowNames",
        		lv_rowNames_19_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getMatrixQuestionAccess().getRightCurlyBracketKeyword_9_4());
    }
)?	otherlv_21='maxPerRow' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getMatrixQuestionAccess().getMaxPerRowKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getMaxPerRowEIntParserRuleCall_11_0()); 
	    }
		lv_maxPerRow_22_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatrixQuestionRule());
	        }
       		set(
       			$current, 
       			"maxPerRow",
        		lv_maxPerRow_22_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23='conditions' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getMatrixQuestionAccess().getConditionsKeyword_12_0());
    }
	otherlv_24='(' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getMatrixQuestionAccess().getLeftParenthesisKeyword_12_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatrixQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getConditionsQuestionConditionCrossReference_12_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getMatrixQuestionAccess().getCommaKeyword_12_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatrixQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMatrixQuestionAccess().getConditionsQuestionConditionCrossReference_12_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28=')' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getMatrixQuestionAccess().getRightParenthesisKeyword_12_4());
    }
)?	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getMatrixQuestionAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleCalendarQuestion
entryRuleCalendarQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalendarQuestionRule()); }
	 iv_ruleCalendarQuestion=ruleCalendarQuestion 
	 { $current=$iv_ruleCalendarQuestion.current; } 
	 EOF 
;

// Rule CalendarQuestion
ruleCalendarQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mandatory_0_0=	'mandatory' 
    {
        newLeafNode(lv_mandatory_0_0, grammarAccess.getCalendarQuestionAccess().getMandatoryMandatoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "mandatory");
	    }

)
)(
(
		lv_year_1_0=	'year' 
    {
        newLeafNode(lv_year_1_0, grammarAccess.getCalendarQuestionAccess().getYearYearKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "year", true, "year");
	    }

)
)(
(
		lv_month_2_0=	'month' 
    {
        newLeafNode(lv_month_2_0, grammarAccess.getCalendarQuestionAccess().getMonthMonthKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "month", true, "month");
	    }

)
)(
(
		lv_day_3_0=	'day' 
    {
        newLeafNode(lv_day_3_0, grammarAccess.getCalendarQuestionAccess().getDayDayKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "day", true, "day");
	    }

)
)(
(
		lv_hour_4_0=	'hour' 
    {
        newLeafNode(lv_hour_4_0, grammarAccess.getCalendarQuestionAccess().getHourHourKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "hour", true, "hour");
	    }

)
)(
(
		lv_minute_5_0=	'minute' 
    {
        newLeafNode(lv_minute_5_0, grammarAccess.getCalendarQuestionAccess().getMinuteMinuteKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
       		setWithLastConsumed($current, "minute", true, "minute");
	    }

)
)	otherlv_6='CalendarQuestion' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCalendarQuestionAccess().getCalendarQuestionKeyword_6());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCalendarQuestionAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_8='id' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCalendarQuestionAccess().getIdKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarQuestionAccess().getIdEStringParserRuleCall_9_0()); 
	    }
		lv_id_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='title' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCalendarQuestionAccess().getTitleKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarQuestionAccess().getTitleEStringParserRuleCall_11_0()); 
	    }
		lv_title_11_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_11_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='description' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCalendarQuestionAccess().getDescriptionKeyword_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarQuestionAccess().getDescriptionEStringParserRuleCall_12_1_0()); 
	    }
		lv_description_13_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarQuestionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_13_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='conditions' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCalendarQuestionAccess().getConditionsKeyword_13_0());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCalendarQuestionAccess().getLeftParenthesisKeyword_13_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCalendarQuestionAccess().getConditionsQuestionConditionCrossReference_13_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCalendarQuestionAccess().getCommaKeyword_13_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCalendarQuestionAccess().getConditionsQuestionConditionCrossReference_13_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCalendarQuestionAccess().getRightParenthesisKeyword_13_4());
    }
)?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getCalendarQuestionAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleIntegerQuestion
entryRuleIntegerQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerQuestionRule()); }
	 iv_ruleIntegerQuestion=ruleIntegerQuestion 
	 { $current=$iv_ruleIntegerQuestion.current; } 
	 EOF 
;

// Rule IntegerQuestion
ruleIntegerQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_mandatory_0_0=	'mandatory' 
    {
        newLeafNode(lv_mandatory_0_0, grammarAccess.getIntegerQuestionAccess().getMandatoryMandatoryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerQuestionRule());
	        }
       		setWithLastConsumed($current, "mandatory", true, "mandatory");
	    }

)
)	otherlv_1='IntegerQuestion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntegerQuestionAccess().getIntegerQuestionKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegerQuestionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='id' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntegerQuestionAccess().getIdKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getIdEStringParserRuleCall_4_0()); 
	    }
		lv_id_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='title' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIntegerQuestionAccess().getTitleKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getTitleEStringParserRuleCall_6_0()); 
	    }
		lv_title_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='description' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntegerQuestionAccess().getDescriptionKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getDescriptionEStringParserRuleCall_7_1_0()); 
	    }
		lv_description_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='minValue' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntegerQuestionAccess().getMinValueKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getMinValueEIntParserRuleCall_9_0()); 
	    }
		lv_minValue_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_10_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='step' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntegerQuestionAccess().getStepKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getStepEIntParserRuleCall_11_0()); 
	    }
		lv_step_12_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"step",
        		lv_step_12_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='maxValue' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIntegerQuestionAccess().getMaxValueKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getMaxValueEIntParserRuleCall_13_0()); 
	    }
		lv_maxValue_14_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerQuestionRule());
	        }
       		set(
       			$current, 
       			"maxValue",
        		lv_maxValue_14_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15='conditions' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntegerQuestionAccess().getConditionsKeyword_14_0());
    }
	otherlv_16='(' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getIntegerQuestionAccess().getLeftParenthesisKeyword_14_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getConditionsQuestionConditionCrossReference_14_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getIntegerQuestionAccess().getCommaKeyword_14_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerQuestionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getIntegerQuestionAccess().getConditionsQuestionConditionCrossReference_14_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_20=')' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getIntegerQuestionAccess().getRightParenthesisKeyword_14_4());
    }
)?	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getIntegerQuestionAccess().getRightCurlyBracketKeyword_15());
    }
)
;









// Entry rule entryRuleOption
entryRuleOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionRule()); }
	 iv_ruleOption=ruleOption 
	 { $current=$iv_ruleOption.current; } 
	 EOF 
;

// Rule Option
ruleOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Option' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOptionAccess().getOptionKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOptionAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='id' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionAccess().getIdKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionAccess().getIdEStringParserRuleCall_2_1_0()); 
	    }
		lv_id_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='text' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionAccess().getTextKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionAccess().getTextEStringParserRuleCall_3_1_0()); 
	    }
		lv_text_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='question' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOptionAccess().getQuestionKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOptionAccess().getQuestionChoiceQuestionCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOptionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


